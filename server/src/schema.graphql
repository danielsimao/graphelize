scalar timestamp

type AuthPayload {
  token: String
  user: User
}

type User {
  id: ID!
  username: String!
  fullname: String!
  email: String!
  password: String!
  repos: [Repo!]!
  createdAt: timestamp!
  updatedAt: timestamp!
}

type Repo {
  id: ID!
  name: String!
  url: String!
  balance: Int!
  userId: ID!
  user: User!
}

type Query {
  repos: [Repo!]!
  repo(id: ID!): Repo
  user(id: ID!): User
  users: [User!]!
}

type Mutation {
  createRepo(name: String!, url: String!, balance: Int!): Repo!
  updateRepo(id: ID!, name: String!, url: String!, balance: Int!): [Int!]!
  deleteRepo(id: ID!): Int!
  signup(
    username: String!
    fullname: String!
    email: String!
    password: String!
  ): AuthPayload
  login(username: String!, password: String!): AuthPayload
  updateUser(
    id: ID!
    username: String!
    fullname: String!
    email: String!
    password: String!
  ): [Int!]!
  deleteUser(id: ID!): Int!
}
